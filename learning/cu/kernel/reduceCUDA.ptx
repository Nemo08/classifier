//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_52
.address_size 64

	// .globl	reduce
.global .align 4 .u32 exitFlag;

.visible .entry reduce(
	.param .u64 reduce_param_0,
	.param .u64 reduce_param_1,
	.param .u64 reduce_param_2,
	.param .u64 reduce_param_3,
	.param .u64 reduce_param_4
)
{
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<29>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<189>;
	.reg .b64 	%rd<79>;


	ld.param.u64 	%rd17, [reduce_param_0];
	ld.param.u64 	%rd18, [reduce_param_1];
	ld.param.u64 	%rd19, [reduce_param_2];
	ld.param.u64 	%rd20, [reduce_param_3];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	cvta.to.global.u64 	%rd3, %rd17;
	cvta.to.global.u64 	%rd4, %rd18;
	ld.global.u32 	%r1, [%rd4];
	cvt.u64.u32 	%rd5, %r1;
	ld.global.u32 	%r2, [%rd4+20];
	ld.global.u32 	%r3, [%rd4+24];
	ld.global.u32 	%r4, [%rd4+8];
	ld.global.u32 	%r5, [%rd4+4];
	min.u32 	%r6, %r4, %r5;
	mov.u32 	%r41, %ntid.x;
	mov.u32 	%r42, %ctaid.x;
	mov.u32 	%r43, %tid.x;
	mad.lo.s32 	%r44, %r42, %r41, %r43;
	cvt.u64.u32 	%rd21, %r44;
	mov.u32 	%r45, %ntid.y;
	mov.u32 	%r46, %ctaid.y;
	mov.u32 	%r47, %tid.y;
	mad.lo.s32 	%r48, %r46, %r45, %r47;
	cvt.u64.u32 	%rd22, %r48;
	mov.u32 	%r49, %ntid.z;
	mov.u32 	%r50, %ctaid.z;
	mov.u32 	%r51, %tid.z;
	mad.lo.s32 	%r52, %r50, %r49, %r51;
	mov.u32 	%r53, %nctaid.x;
	mul.lo.s32 	%r54, %r53, %r41;
	cvt.u64.u32 	%rd23, %r54;
	mov.u32 	%r55, %nctaid.y;
	mul.lo.s32 	%r56, %r55, %r45;
	mul.wide.u32 	%rd24, %r52, %r56;
	add.s64 	%rd25, %rd24, %rd22;
	mul.lo.s64 	%rd26, %rd25, %rd23;
	add.s64 	%rd6, %rd26, %rd21;
	cvt.u32.u64 	%r177, %rd6;
	ld.global.u32 	%r8, [%rd4+16];
	setp.le.u32 	%p1, %r8, %r177;
	@%p1 bra 	$L__BB0_30;

	ld.global.u32 	%r57, [%rd4+12];
	// begin inline asm
	mov.u64 	%rd27, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd28, %clock64;
	// end inline asm
	sub.s64 	%rd29, %rd28, %rd27;
	cvt.rn.f32.s64 	%f2, %rd29;
	div.rn.f32 	%f3, %f2, 0f49742400;
	cvt.rn.f32.u32 	%f4, %r57;
	mul.f32 	%f1, %f4, 0f3A83126F;
	setp.geu.f32 	%p2, %f3, %f1;
	@%p2 bra 	$L__BB0_30;

	add.s32 	%r58, %r1, 3;
	shr.u32 	%r59, %r58, 2;
	add.s32 	%r60, %r59, 4;
	cvt.u64.u32 	%rd30, %r60;
	mul.lo.s64 	%rd9, %rd6, %rd30;
	and.b32  	%r10, %r60, 3;
	sub.s32 	%r11, %r60, %r10;

$L__BB0_3:
	mov.u64 	%rd31, exitFlag;
	atom.global.add.u32 	%r61, [%rd31], 0;
	setp.gt.s32 	%p3, %r61, %r2;
	@%p3 bra 	$L__BB0_30;

	setp.eq.s32 	%p4, %r6, 0;
	mov.u32 	%r183, 0;
	@%p4 bra 	$L__BB0_9;

	mov.u32 	%r178, %r183;

$L__BB0_6:
	xor.b32  	%r176, %r177, %r3;
	cvt.u64.u32 	%rd10, %r178;
	mul.wide.u32 	%rd32, %r178, 4;
	add.s64 	%rd33, %rd2, %rd32;
	ld.global.u32 	%r65, [%rd33];
	sub.s32 	%r66, %r65, %r176;
	shl.b32 	%r67, %r66, 2;
	xor.b32  	%r68, %r67, %r66;
	shl.b32 	%r69, %r68, 3;
	xor.b32  	%r70, %r69, %r68;
	shr.u32 	%r71, %r70, 5;
	xor.b32  	%r72, %r71, %r70;
	shr.u32 	%r73, %r72, 7;
	xor.b32  	%r74, %r73, %r72;
	shl.b32 	%r75, %r74, 11;
	xor.b32  	%r76, %r75, %r74;
	shl.b32 	%r77, %r76, 13;
	xor.b32  	%r78, %r77, %r76;
	shr.u32 	%r79, %r78, 17;
	xor.b32  	%r80, %r79, %r78;
	shl.b32 	%r81, %r80, 19;
	xor.b32  	%r82, %r81, %r80;
	add.s32 	%r83, %r82, %r176;
	cvt.u64.u32 	%rd34, %r83;
	mul.lo.s64 	%rd35, %rd34, %rd5;
	shr.u64 	%rd36, %rd35, 32;
	cvt.u32.u64 	%r84, %rd36;
	shr.u64 	%rd37, %rd35, 34;
	shl.b32 	%r85, %r84, 1;
	and.b32  	%r16, %r85, 6;
	add.s64 	%rd38, %rd37, %rd9;
	add.s64 	%rd11, %rd3, %rd38;
	ld.global.u8 	%rs1, [%rd11];
	cvt.u32.u16 	%r86, %rs1;
	and.b32  	%r87, %r86, 255;
	shr.u32 	%r88, %r87, %r16;
	cvt.u16.u32 	%rs9, %r88;
	and.b16  	%rs2, %rs9, 3;
	setp.eq.s16 	%p5, %rs2, 2;
	@%p5 bra 	$L__BB0_23;

	xor.b32  	%r174, %r177, %r3;
	setp.eq.s16 	%p6, %rs2, 0;
	selp.u32 	%r89, 1, 0, %p6;
	add.s32 	%r17, %r183, %r89;
	mov.u16 	%rs10, 1;
	shl.b16 	%rs11, %rs10, %r16;
	or.b16  	%rs12, %rs1, %rs11;
	st.global.u8 	[%rd11], %rs12;
	shl.b64 	%rd39, %rd10, 2;
	add.s64 	%rd40, %rd1, %rd39;
	ld.global.u32 	%r90, [%rd40];
	sub.s32 	%r91, %r90, %r174;
	shl.b32 	%r92, %r91, 2;
	xor.b32  	%r93, %r92, %r91;
	shl.b32 	%r94, %r93, 3;
	xor.b32  	%r95, %r94, %r93;
	shr.u32 	%r96, %r95, 5;
	xor.b32  	%r97, %r96, %r95;
	shr.u32 	%r98, %r97, 7;
	xor.b32  	%r99, %r98, %r97;
	shl.b32 	%r100, %r99, 11;
	xor.b32  	%r101, %r100, %r99;
	shl.b32 	%r102, %r101, 13;
	xor.b32  	%r103, %r102, %r101;
	shr.u32 	%r104, %r103, 17;
	xor.b32  	%r105, %r104, %r103;
	shl.b32 	%r106, %r105, 19;
	xor.b32  	%r107, %r106, %r105;
	add.s32 	%r108, %r107, %r174;
	cvt.u64.u32 	%rd41, %r108;
	mul.lo.s64 	%rd42, %rd41, %rd5;
	shr.u64 	%rd43, %rd42, 32;
	cvt.u32.u64 	%r109, %rd43;
	shr.u64 	%rd44, %rd42, 34;
	shl.b32 	%r110, %r109, 1;
	and.b32  	%r18, %r110, 6;
	add.s64 	%rd45, %rd44, %rd9;
	add.s64 	%rd12, %rd3, %rd45;
	ld.global.u8 	%rs3, [%rd12];
	cvt.u32.u16 	%r111, %rs3;
	and.b32  	%r112, %r111, 255;
	shr.u32 	%r113, %r112, %r18;
	cvt.u16.u32 	%rs13, %r113;
	and.b16  	%rs4, %rs13, 3;
	setp.eq.s16 	%p7, %rs4, 1;
	@%p7 bra 	$L__BB0_23;

	cvt.u32.u64 	%r114, %rd10;
	setp.eq.s16 	%p8, %rs4, 0;
	selp.u32 	%r115, 1, 0, %p8;
	add.s32 	%r183, %r17, %r115;
	mov.u16 	%rs14, 2;
	shl.b16 	%rs15, %rs14, %r18;
	or.b16  	%rs16, %rs3, %rs15;
	st.global.u8 	[%rd12], %rs16;
	add.s32 	%r178, %r114, 1;
	setp.lt.u32 	%p9, %r178, %r6;
	@%p9 bra 	$L__BB0_6;

$L__BB0_9:
	mov.u64 	%rd74, exitFlag;
	atom.global.add.u32 	%r116, [%rd74], 0;
	setp.gt.s32 	%p10, %r116, %r2;
	@%p10 bra 	$L__BB0_30;

	setp.ge.u32 	%p11, %r4, %r5;
	@%p11 bra 	$L__BB0_14;

	xor.b32  	%r22, %r177, %r3;
	mov.u32 	%r181, %r6;

$L__BB0_12:
	mul.wide.u32 	%rd47, %r181, 4;
	add.s64 	%rd48, %rd2, %rd47;
	ld.global.u32 	%r117, [%rd48];
	sub.s32 	%r118, %r117, %r22;
	shl.b32 	%r119, %r118, 2;
	xor.b32  	%r120, %r119, %r118;
	shl.b32 	%r121, %r120, 3;
	xor.b32  	%r122, %r121, %r120;
	shr.u32 	%r123, %r122, 5;
	xor.b32  	%r124, %r123, %r122;
	shr.u32 	%r125, %r124, 7;
	xor.b32  	%r126, %r125, %r124;
	shl.b32 	%r127, %r126, 11;
	xor.b32  	%r128, %r127, %r126;
	shl.b32 	%r129, %r128, 13;
	xor.b32  	%r130, %r129, %r128;
	shr.u32 	%r131, %r130, 17;
	xor.b32  	%r132, %r131, %r130;
	shl.b32 	%r133, %r132, 19;
	xor.b32  	%r134, %r133, %r132;
	add.s32 	%r135, %r134, %r22;
	cvt.u64.u32 	%rd49, %r135;
	mul.lo.s64 	%rd50, %rd49, %rd5;
	shr.u64 	%rd51, %rd50, 32;
	cvt.u32.u64 	%r136, %rd51;
	shr.u64 	%rd52, %rd50, 34;
	shl.b32 	%r137, %r136, 1;
	and.b32  	%r25, %r137, 6;
	add.s64 	%rd53, %rd52, %rd9;
	add.s64 	%rd13, %rd3, %rd53;
	ld.global.u8 	%rs5, [%rd13];
	cvt.u32.u16 	%r138, %rs5;
	and.b32  	%r139, %r138, 255;
	shr.u32 	%r140, %r139, %r25;
	cvt.u16.u32 	%rs17, %r140;
	and.b16  	%rs6, %rs17, 3;
	setp.eq.s16 	%p12, %rs6, 2;
	@%p12 bra 	$L__BB0_23;

	setp.eq.s16 	%p13, %rs6, 0;
	selp.u32 	%r141, 1, 0, %p13;
	add.s32 	%r183, %r183, %r141;
	mov.u16 	%rs18, 1;
	shl.b16 	%rs19, %rs18, %r25;
	or.b16  	%rs20, %rs5, %rs19;
	st.global.u8 	[%rd13], %rs20;
	add.s32 	%r181, %r181, 1;
	setp.lt.u32 	%p14, %r181, %r5;
	@%p14 bra 	$L__BB0_12;

$L__BB0_14:
	mov.u64 	%rd75, exitFlag;
	atom.global.add.u32 	%r142, [%rd75], 0;
	setp.gt.s32 	%p15, %r142, %r2;
	@%p15 bra 	$L__BB0_30;

	setp.le.u32 	%p16, %r4, %r5;
	@%p16 bra 	$L__BB0_19;

	xor.b32  	%r29, %r177, %r3;
	mov.u32 	%r184, %r6;

$L__BB0_17:
	mul.wide.u32 	%rd55, %r184, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.global.u32 	%r143, [%rd56];
	sub.s32 	%r144, %r143, %r29;
	shl.b32 	%r145, %r144, 2;
	xor.b32  	%r146, %r145, %r144;
	shl.b32 	%r147, %r146, 3;
	xor.b32  	%r148, %r147, %r146;
	shr.u32 	%r149, %r148, 5;
	xor.b32  	%r150, %r149, %r148;
	shr.u32 	%r151, %r150, 7;
	xor.b32  	%r152, %r151, %r150;
	shl.b32 	%r153, %r152, 11;
	xor.b32  	%r154, %r153, %r152;
	shl.b32 	%r155, %r154, 13;
	xor.b32  	%r156, %r155, %r154;
	shr.u32 	%r157, %r156, 17;
	xor.b32  	%r158, %r157, %r156;
	shl.b32 	%r159, %r158, 19;
	xor.b32  	%r160, %r159, %r158;
	add.s32 	%r161, %r160, %r29;
	cvt.u64.u32 	%rd57, %r161;
	mul.lo.s64 	%rd58, %rd57, %rd5;
	shr.u64 	%rd59, %rd58, 32;
	cvt.u32.u64 	%r162, %rd59;
	shr.u64 	%rd60, %rd58, 34;
	shl.b32 	%r163, %r162, 1;
	and.b32  	%r32, %r163, 6;
	add.s64 	%rd61, %rd60, %rd9;
	add.s64 	%rd14, %rd3, %rd61;
	ld.global.u8 	%rs7, [%rd14];
	cvt.u32.u16 	%r164, %rs7;
	and.b32  	%r165, %r164, 255;
	shr.u32 	%r166, %r165, %r32;
	cvt.u16.u32 	%rs21, %r166;
	and.b16  	%rs8, %rs21, 3;
	setp.eq.s16 	%p17, %rs8, 1;
	@%p17 bra 	$L__BB0_23;

	setp.eq.s16 	%p18, %rs8, 0;
	selp.u32 	%r167, 1, 0, %p18;
	add.s32 	%r183, %r183, %r167;
	mov.u16 	%rs22, 2;
	shl.b16 	%rs23, %rs22, %r32;
	or.b16  	%rs24, %rs7, %rs23;
	st.global.u8 	[%rd14], %rs24;
	add.s32 	%r184, %r184, 1;
	setp.lt.u32 	%p19, %r184, %r4;
	@%p19 bra 	$L__BB0_17;

$L__BB0_19:
	mov.u64 	%rd76, exitFlag;
	atom.global.add.u32 	%r168, [%rd76], 0;
	setp.gt.s32 	%p20, %r168, %r2;
	@%p20 bra 	$L__BB0_30;

	add.s32 	%r175, %r4, %r5;
	setp.eq.s32 	%p21, %r183, %r175;
	@%p21 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_21;

$L__BB0_23:
	mov.u32 	%r187, 0;
	mov.u32 	%r188, %r11;

$L__BB0_24:
	cvt.u64.u32 	%rd65, %r187;
	add.s64 	%rd66, %rd9, %rd65;
	add.s64 	%rd67, %rd3, %rd66;
	mov.u16 	%rs25, 0;
	st.global.u8 	[%rd67], %rs25;
	st.global.u8 	[%rd67+1], %rs25;
	st.global.u8 	[%rd67+2], %rs25;
	st.global.u8 	[%rd67+3], %rs25;
	add.s32 	%r187, %r187, 4;
	add.s32 	%r188, %r188, -4;
	setp.ne.s32 	%p23, %r188, 0;
	@%p23 bra 	$L__BB0_24;

	setp.eq.s32 	%p24, %r10, 0;
	@%p24 bra 	$L__BB0_29;

	setp.eq.s32 	%p25, %r10, 1;
	cvt.u64.u32 	%rd68, %r187;
	add.s64 	%rd69, %rd9, %rd68;
	add.s64 	%rd15, %rd3, %rd69;
	mov.u16 	%rs26, 0;
	st.global.u8 	[%rd15], %rs26;
	@%p25 bra 	$L__BB0_29;

	setp.eq.s32 	%p26, %r10, 2;
	st.global.u8 	[%rd15+1], %rs26;
	@%p26 bra 	$L__BB0_29;

	mov.u16 	%rs28, 0;
	st.global.u8 	[%rd15+2], %rs28;

$L__BB0_29:
	add.s32 	%r177, %r177, %r8;
	// begin inline asm
	mov.u64 	%rd70, %clock64;
	// end inline asm
	sub.s64 	%rd71, %rd70, %rd27;
	cvt.rn.f32.s64 	%f5, %rd71;
	div.rn.f32 	%f6, %f5, 0f49742400;
	setp.lt.f32 	%p27, %f6, %f1;
	@%p27 bra 	$L__BB0_3;

$L__BB0_30:
	ret;

$L__BB0_21:
	mov.u64 	%rd77, exitFlag;
	atom.global.add.u32 	%r169, [%rd77], 0;
	setp.gt.s32 	%p22, %r169, %r2;
	@%p22 bra 	$L__BB0_30;

	mov.u64 	%rd78, exitFlag;
	ld.param.u64 	%rd73, [reduce_param_4];
	cvta.to.global.u64 	%rd72, %rd73;
	xor.b32  	%r170, %r177, %r3;
	st.global.u32 	[%rd72], %r170;
	st.global.u32 	[%rd72+4], %r1;
	add.s32 	%r171, %r2, 1;
	atom.global.exch.b32 	%r172, [%rd78], %r171;
	bra.uni 	$L__BB0_30;

}

